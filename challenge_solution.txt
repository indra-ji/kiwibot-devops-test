***BUILD PROCESS***

ACCESS 
1. Check whether you have received access to the project on GCP.

SETTING UP GCP 

1. Install and initialize the GCP CLI 
    https://cloud.google.com/sdk/docs/install


INITIAL DEPLOYMENT INTO TEST

1. Set this project as default 
    gcloud config set project kiwibot-test

2. Configure gcloud for your chosen region 
    gcloud config set run/region us-central1

3. Creating a Memorystore instance for Redis 
    gcloud redis instances create redis-test --size=1 --region=us-central1

4. Start a Serverless VPC Access Connector 
    gcloud compute networks vpc-access connectors create connector-test \
  --region us-central1 \
  --range "10.8.0.0/28"

5. Define environment variable with the IP address of your Redis instance's 
authorized network. 
     export REDISHOST=$(gcloud redis instances describe redis-test --region us-central1 --format "value(host)")

6. Create service account for service identity.
    gcloud iam service-accounts create chat-identity

7. Build and deploy. 
    gcloud beta run deploy chat-app --source . \
    --vpc-connector connector-test \
    --allow-unauthenticated \
    --timeout 3600 \
    --service-account chat-identity \
    --update-env-vars REDISHOST=$REDISHOST

    Note: Press Y on any steps or API installs that may be necessary 

INITIAL DEPLOYMENT INTO PRODUCTION

1. Set this project as default 
    gcloud config set project kiwibot-prod

2. Configure gcloud for your chosen region 
    gcloud config set run/region us-central1

3. Creating a Memorystore instance for Redis 
    gcloud redis instances create redis-prod --size=1 --region=us-central1

4. Start a Serverless VPC Access Connector 
    gcloud compute networks vpc-access connectors create connector-prod \
  --region us-central1 \
  --range "10.8.0.0/28"

5. Define environment variable with the IP address of your Redis instance's 
authorized network. 
     export REDISHOST=$(gcloud redis instances describe redis-prod --region us-central1 --format "value(host)")

6. Create service account for service identity.
    gcloud iam service-accounts create chat-identity

7. Build and deploy. 
    gcloud beta run deploy chat-app --source . \
    --vpc-connector connector-prod \
    --allow-unauthenticated \
    --timeout 3600 \
    --service-account chat-identity \
    --update-env-vars REDISHOST=$REDISHOST

    Note: Press Y on any steps or API installs that may be necessary 

ROLLING DEPLOYMENT INTO TEST 

ROLLING DEPLOYMENT INTO PRODUCTION 

USER TESTING 

1. Go to generated URL via your browser. 

2. Add name and name of the room. 

3. Use the application. 
